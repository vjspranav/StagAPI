AWSTemplateFormatVersion: 2010-09-09
Description: >-
  stagos-api
Transform:
- AWS::Serverless-2016-10-31

Parameters:
  MONGOURI:
    Type: String
    Description: MongoDB URI
    Default: mongodb://localhost:27017/stagos
  VERSION:
    Type: String
    Description: Version
    Default: 14
  STAGE:
    Type: String
    Description: Stage
    Default: Prod
  ZOHOPASS:
    Type: String
    Description: Zoho Password
    Default: password

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  CommonLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: common-layer
      Description: Dependencies and middlewares for our backend
      ContentUri: common-layer/
      CompatibleRuntimes:
        - nodejs20.x

  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
  ApiDeployment:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref STAGE

  # This is a Lambda function config associated with the source code: get-all-items.js
  getAllMaintainersFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-all-maintainers.getAllMaintainersHandler
      Runtime: nodejs20.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get all Maintainers from
        a MongoDB table.
      Environment:
        Variables:
          MONGOURI: !Ref MONGOURI
      Events:
        Api:
          Type: Api
          Properties:
            Path: /maintainers
            Method: GET
            RestApiId: !Ref ApiDeployment
 
  getMaintainersFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-maintainers.getMaintainersHandler
      Runtime: nodejs20.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get all Maintainers from
        a MongoDB table.
      Environment:
        Variables:
          MONGOURI: !Ref MONGOURI
      Events:
        Api:
          Type: Api
          Properties:
            Path: /maintainers/{device}
            Method: GET
            RestApiId: !Ref ApiDeployment

  postApplyFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/post-apply.postApplyHandler
      Runtime: nodejs20.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Layers:
        - !Ref CommonLayer
      Description: Maintainer Application Endpoint
      Environment:
        Variables:
          MONGOURI: !Ref MONGOURI
          ZOHOPASS: !Ref ZOHOPASS
      Events:
        Api:
          Type: Api
          Properties:
            Path: /maintainers/apply
            Method: POST
            RestApiId: !Ref ApiDeployment

  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

Outputs:
  WebEndpoint:
    Description: API Gateway endpoint URL for Prod stage
    Value: !Sub "https://${ApiDeployment}.execute-api.${AWS::Region}.amazonaws.com/${STAGE}"
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    LoggingConfig:
      LogFormat: JSON
